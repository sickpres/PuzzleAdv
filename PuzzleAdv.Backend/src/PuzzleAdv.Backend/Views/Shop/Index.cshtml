@using System.Linq
@model PuzzleAdv.Backend.ViewModels.Shop.ShopViewModel

@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Scheda negozio";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="container">
        <div class="ibox">

            <form asp-action="Index" method="post" class="form-horizontal" id="form">

                <div class="ibox-title">
                    <h4>Scheda negozio</h4>
                </div>

                <div class="ibox-content">

                    <div class="tabs-container">

                        <ul class="nav nav-tabs">
                            <li class="active"><a data-toggle="tab" href="#tab-1"> Dati principali</a></li>
                            <li class="" style="visibility: @Html.IsVisible(Model != null);"><a data-toggle="tab" href="#tab-2"> Localizzazione</a></li>
                            <li class="" style="visibility: @Html.IsVisible(Model != null);"><a data-toggle="tab" href="#tab-3"> Orari</a></li>
                            <li class="" style="visibility: @Html.IsVisible(Model != null);"><a data-toggle="tab" href="#tab-4"> Foto</a></li>
                        </ul>

                        <div class="tab-content">
                            <div id="tab-1" class="tab-pane active">
                                <div class="panel-body">
                                    @Html.Partial("_MainDataPartial")
                                </div>
                            </div>
                            <div id="tab-2" class="tab-pane">
                                <div class="panel-body">

                                    @Html.Partial("_LocalizationPartial")

                                </div>
                            </div>
                            <div id="tab-3" class="tab-pane">
                                <div class="panel-body">
                                    &nbsp;
                                </div>
                            </div>
                            <div id="tab-4" class="tab-pane">
                                <div class="panel-body">
                                    &nbsp;
                                </div>
                            </div>
                        </div>

                    </div>

                    <div class="row">
                        <div class="col-md-12">
                            <input type="submit" value="Salva" class="btn btn-w-m btn-success pull-right" />
                        </div>
                    </div>
                </div>

            </form>

        </div>
    </div>
</div>

@if (Model != null)
{
    @section Scripts {

        <script src="https://maps.googleapis.com/maps/api/js?key=AIzaSyDEZvQ4ass3ECLbNhK3OThHEpSV807Y3UE"></script>

        <script type="text/javascript">

            var myCenter = new google.maps.LatLng(@Model.Latitude, @Model.Longitude);

            var marker = new google.maps.Marker({
                position: myCenter
            });


            function initialize_map() {

                var mapProp = {
                    center: myCenter,
                    zoom: 14,
                    styles: [{ "featureType": "all", "elementType": "all", "stylers": [{ "saturation": 10 }, { "lightness": 30 }, { "gamma": 0.5 }, { "hue": "#169ece" }] }]
                };

                var map = new google.maps.Map(document.getElementById("map-canvas"), mapProp);

                marker = new google.maps.Marker({
                    map: map,
                    draggable: true,
                    animation: google.maps.Animation.DROP,
                    position: {lat: @Model.Latitude, lng: @Model.Longitude}
                });

                var geocoder = geocoder = new google.maps.Geocoder();

                google.maps.event.addListener(marker, "dragend", function (e) {
                    var lat, lng;
                    geocoder.geocode({ 'latLng': marker.getPosition() }, function (results, status) {
                        if (status == google.maps.GeocoderStatus.OK) {
                            $('#txtLat').val(marker.getPosition().lat());
                            $('#txtLong').val(marker.getPosition().lng());
                        }
                    });
                });

            };


            $('a[data-toggle="tab"]').on('shown.bs.tab', function (e) {
                //save the latest tab;
                localStorage.setItem('lastTab', $(e.target).attr('href'));
                
                //initialize map
                if ($(e.target).attr('href') == '#tab-2'){
                    initialize_map();
                };
            });

            //go to the latest tab, if it exists:
            var lastTab = localStorage.getItem('lastTab');

            if (lastTab) {
                $('a[href="'+lastTab+'"]').click();
            }
           
        </script>
    }
}