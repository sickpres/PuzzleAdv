@{
    Layout = "~/Views/Shared/_Layout.cshtml";
    ViewData["Title"] = "Nuovo Puzzle";
}

<div class="wrapper wrapper-content animated fadeInRight">
    <div class="container">
        <div class="ibox">
            <div class="ibox-title">
                <h4>Nuovo Puzzle</h4>
            </div>
            <div class="ibox-content">

                <form id="form" asp-action="Create" method="post" class="wizard-big">
                    <h1>Raggio d'azione</h1>
                    <fieldset>
                        <h2>Entro che raggio, rispetto al tuo negozio, vorresti che venga visualizzato il puzzle?</h2>
                        <div class="row">
                            <div class="col-lg-6">
                                <div class="form-group">
                                    <p></p>
                                    <input type="text" id="distance" name="distance" value="" />
                                </div>
                            </div>
                            <div class="col-lg-4">
                                <div class="text-center">
                                    <div style="margin-top: 20px">
                                        <i class="fa fa-map-marker" style="font-size: 150px;color: #e5e5e5 "></i>
                                    </div>
                                </div>
                            </div>
                        </div>

                    </fieldset>
                    <h1>Immagine 16:9</h1>
                    <fieldset>
                        <h2>Configura l'immagine per schermi a 16:9</h2>
                        @Html.Partial("_ImageCropperPartial1")
                    </fieldset>

                    <h1>Immagine 4:3</h1>
                    <fieldset>
                        <h2>Configura l'immagine per schermi a 4:3</h2>
                        @Html.Partial("_ImageCropperPartial2")
                    </fieldset>

                    <h1>Priorit&aacute;</h1>
                    <fieldset>
                        <h2>Scegli il livello di priorit&aacute; da assegnare al tuo Puzzle:</h2>
                        @Html.Partial("_Premium")
                    </fieldset>

                    <h1>Termini e condizioni</h1>
                    <fieldset>
                        <h2>Termini e condizioni</h2>
                        <input id="acceptTerms" name="acceptTerms" type="checkbox" class="required"> <label for="acceptTerms">Accetto i termini e le condizioni.</label>
                    </fieldset>

                    <h1>Invio dati</h1>
                    <fieldset>
                        <h2>Invio dati in corso, attendere ...</h2>
                        <div class="sk-spinner sk-spinner-wave">
                            <div class="sk-rect1"></div>
                            <div class="sk-rect2"></div>
                            <div class="sk-rect3"></div>
                            <div class="sk-rect4"></div>
                            <div class="sk-rect5"></div>
                        </div>
                    </fieldset>
                </form>

            </div>
        </div>
    </div>
</div>


@section Styles {
    <environment names="Development">
        <link rel="stylesheet" href="~/lib/ionRangeSlider/ion.rangeSlider.css" />
        <link rel="stylesheet" href="~/lib/ionRangeSlider/ion.rangeSlider.skinFlat.css" />
        <link rel="stylesheet" href="~/lib_bower/cropper/dist/cropper.css" />
        <link rel="stylesheet" href="~/lib/steps/jquery.steps.css" />
        <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
    </environment>
    <environment names="Staging,Production">
        <link rel="stylesheet" href="~/lib/ionRangeSlider/ion.rangeSlider.css" />
        <link rel="stylesheet" href="~/lib/ionRangeSlider/ion.rangeSlider.skinFlat.css" />
        <link rel="stylesheet" href="~/lib_bower/cropper/dist/cropper.css" />
        <link rel="stylesheet" href="~/lib/steps/jquery.steps.css" />
        <link rel="stylesheet" href="~/lib/iCheck/custom.css" />
    </environment>
}

@section Scripts {
    <environment names="Development">
        <script src="~/lib_bower/moment/moment.js"></script>
        <script src="~/lib/ionRangeSlider/ion.rangeSlider.min.js"></script>
        <script src="~/lib_bower/cropper/dist/cropper.js"></script>
        <script src="~/lib/blueimp-canvas-to-blob/js/canvas-to-blob.js"></script>
        <script src="~/lib/steps/jquery.steps.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
    </environment>
    <environment names="Staging,Production">
        <script src="~/lib_bower/moment/moment.js"></script>
        <script src="~/lib/ionRangeSlider/ion.rangeSlider.min.js"></script>
        <script src="~/lib_bower/cropper/dist/cropper.js"></script>
        <script src="~/lib/blueimp-canvas-to-blob/js/canvas-to-blob.js"></script>
        <script src="~/lib/steps/jquery.steps.js"></script>
        <script src="~/lib/iCheck/icheck.min.js"></script>
    </environment>

   
    <script type="text/javascript">


        $(document).ready(function () {

            // *** iCheck ***
            $(document).ready(function () {
                $('.i-checks').iCheck({
                    checkboxClass: 'icheckbox_square-green',
                    radioClass: 'iradio_square-green',
                });
            });

            // *** steps ***

            $("#form").steps({
                bodyTag: "fieldset",
                stepsOrientation: "vertical",
                enableFinishButton: false,
                labels: {
                    next: "Avanti",
                    previous: "Indietro",
                    loading: "Loading ..."
                },
                onStepChanging: function (event, currentIndex, newIndex) {
                    // Always allow going backward even if the current step contains invalid fields!
                    if (currentIndex > newIndex) {
                        $('a[href="#next"]').text('Avanti');
                        return true;
                    }

                    // Forbid suppressing "Warning" step if the user is to young
                    if (newIndex === 1 && $("#StartDate").val() === '') {
                        return false;
                    }

                    if (newIndex === 3) {
                        $('a[href="#next"]').text('Invia');
                    }

                    if (newIndex === 4) {

                        $('a[href="#previous"]').css('display', 'none');
                        $('a[href="#finish"]').css('display', 'none');

                        var form = $('#form');
                        var formData = new FormData(form.get(0)); //get AntiForgeryToken

                        $image1.cropper('getCroppedCanvas').toBlob(function (blob) {

                            formData.append('croppedImage1', blob);

                            $image2.cropper('getCroppedCanvas').toBlob(function (blob) {

                                formData.append('croppedImage2', blob);

                                $.ajax('/Puzzle/Create', {
                                    method: "POST",
                                    data: formData,
                                    processData: false,
                                    contentType: false,
                                    success: function () {
                                        console.log('Upload success');
                                        var url = '@Url.Action("Index", "Puzzle")';
                                        window.location.href = url;
                                    },
                                    error: function () {
                                        console.log('Upload error');
                                    }

                                });

                            });

                        });

                    }

                    return true;

                    // Start validation; Prevent going forward if false
                    //return form.valid();
                },
                onFinished: function (event, currentIndex) { }
            });


            // *** slider ***
            $("#distance").ionRangeSlider({
                postfix: "Km",
                hasGrid: true,
                min: 10,
                max: 50
            });


            // *** cropper *** --> see view _ImageCropperPartial

            var $image1 = $("#img-crop-1 > img")
            $($image1).cropper({
                aspectRatio: 0.666666667,
                preview: "#img-preview-1",
                done: function (data) {
                    // Output the result data for cropping image.
                }
            });
            var $image2 = $("#img-crop-2 > img")
            $($image2).cropper({
                aspectRatio: 0.8585858585858586,
                preview: "#img-preview-2",
                done: function (data) {
                    // Output the result data for cropping image.
                }
            });


            var $inputImage1 = $("#inputImage1");
            if (window.FileReader) {
                $inputImage1.change(function () {
                    var fileReader = new FileReader(),
                            files = this.files,
                            file;

                    if (!files.length) {
                        return;
                    }

                    file = files[0];

                    if (/^image\/\w+$/.test(file.type)) {
                        fileReader.readAsDataURL(file);
                        fileReader.onload = function () {
                            $inputImage1.val("");
                            $image1.cropper("reset", true).cropper("replace", this.result);
                        };
                    } else {
                        showMessage("Please choose an image file.");
                    }
                });
            } else {
                $inputImage.addClass("hide");
            }

            var $inputImage2 = $("#inputImage2");
            if (window.FileReader) {
                $inputImage2.change(function () {
                    var fileReader = new FileReader(),
                            files = this.files,
                            file;

                    if (!files.length) {
                        return;
                    }

                    file = files[0];

                    if (/^image\/\w+$/.test(file.type)) {
                        fileReader.readAsDataURL(file);
                        fileReader.onload = function () {
                            $inputImage2.val("");
                            $image2.cropper("reset", true).cropper("replace", this.result);
                        };
                    } else {
                        showMessage("Please choose an image file.");
                    }
                });
            } else {
                $inputImage.addClass("hide");
            }


            $("#zoomIn1").click(function () {
                $image1.cropper("zoom", 0.1);
            });

            $("#zoomOut1").click(function () {
                $image1.cropper("zoom", -0.1);
            });

            $("#moveLeft1").click(function () {
                $image1.cropper("move", -1, 0);
            });

            $("#moveRight1").click(function () {
                $image1.cropper("move", 1, 0);
            });

            $("#moveUp1").click(function () {
                $image1.cropper("move", 0, -1);
            });

            $("#moveDown1").click(function () {
                $image1.cropper("move", 0, 1);
            });

            $("#zoomIn2").click(function () {
                $image1.cropper("zoom", 0.1);
            });

            $("#zoomOut2").click(function () {
                $image2.cropper("zoom", -0.1);
            });

            $("#moveLeft2").click(function () {
                $image2.cropper("move", -1, 0);
            });

            $("#moveRight2").click(function () {
                $image2.cropper("move", 1, 0);
            });

            $("#moveUp2").click(function () {
                $image2.cropper("move", 0, -1);
            });

            $("#moveDown2").click(function () {
                $image2.cropper("move", 0, 1);
            });

        });

    </script>
}



